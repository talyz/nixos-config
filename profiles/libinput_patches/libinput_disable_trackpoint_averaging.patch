diff --git a/src/filter.c b/src/filter.c
index 206695bb..a1a00f04 100644
--- a/src/filter.c
+++ b/src/filter.c
@@ -1086,33 +1086,6 @@ trackpoint_accel_profile(struct motion_filter *filter,
 	return factor;
 }
 
-/**
- * Average the deltas, they are messy and can provide sequences like 7, 7,
- * 9, 8, 14, 7, 9, 8 ... The outliers cause unpredictable jumps, so average
- * them out.
- */
-static inline struct device_float_coords
-trackpoint_average_delta(struct trackpoint_accelerator *filter,
-			 const struct device_float_coords *unaccelerated)
-{
-	size_t i;
-	struct device_float_coords avg = {0};
-
-	memmove(&filter->history[1],
-		&filter->history[0],
-		sizeof(*filter->history) * (filter->history_size - 1));
-	filter->history[0] = *unaccelerated;
-
-	for (i = 0; i < filter->history_size; i++) {
-		avg.x += filter->history[i].x;
-		avg.y += filter->history[i].y;
-	}
-	avg.x /= filter->history_size;
-	avg.y /= filter->history_size;
-
-	return avg;
-}
-
 /**
  * Undo any system-wide magic scaling, so we're behaving the same regardless
  * of the trackpoint hardware. This way we can apply our profile independent
@@ -1166,14 +1139,13 @@ trackpoint_accelerator_filter(struct motion_filter *filter,
 	double delta;
 
 	scaled = trackpoint_normalize_deltas(accel_filter, unaccelerated);
-	avg = trackpoint_average_delta(accel_filter, &scaled);
 
-	delta = hypot(avg.x, avg.y);
+	delta = hypot(scaled.x, scaled.y);
 
 	f = trackpoint_accel_profile(filter, data, delta);
 
-	coords.x = avg.x * f;
-	coords.y = avg.y * f;
+	coords.x = scaled.x * f;
+	coords.y = scaled.y * f;
 
 	coords = trackpoint_clip_to_max_delta(accel_filter, coords);
 
@@ -1193,10 +1165,9 @@ trackpoint_accelerator_filter_noop(struct motion_filter *filter,
 	struct normalized_coords coords;
 
 	scaled = trackpoint_normalize_deltas(accel_filter, unaccelerated);
-	avg = trackpoint_average_delta(accel_filter, &scaled);
 
-	coords.x = avg.x;
-	coords.y = avg.y;
+	coords.x = scaled.x;
+	coords.y = scaled.y;
 
 	coords = trackpoint_clip_to_max_delta(accel_filter, coords);
 
